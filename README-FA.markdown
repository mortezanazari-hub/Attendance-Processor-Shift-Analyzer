# 📚 مستندات پروژه: ابزار پردازش و گزارش حضور و غیاب

ابزاری قدرتمند برای پردازش داده‌های خام حضور و غیاب دستگاه‌های Time Clock، تشخیص خودکار شیفت‌های کاری، محاسبه جزئیات حضور (مانند تأخیر، خروج زودهنگام و اضافه‌کاری) و تولید گزارش‌های جامع در قالب Excel و CSV (سازگار با Odoo).

---

## 🎯 ویژگی‌های اصلی

- **ماژولار و قابل تنظیم**: پروژه به سه ماژول (`settings.py`، `shift_logic.py`، `main_processor.py`) تقسیم شده برای مدیریت و توسعه آسان.
- **تشخیص شیفت خودکار**: تشخیص بهترین شیفت (صبح، عصر، شب) بر اساس زمان ورود و خروج، مناسب برای کارمندانی بدون شیفت ثابت.
- **پشتیبانی از تاریخ شمسی و میلادی**: پردازش فایل‌های ورودی با فرمت **جلالی** یا **میلادی**.
- **گزارش‌دهی دقیق**: محاسبه **مدت زمان حضور**، **اضافه‌کاری**، **تأخیر**، **تعجیل در ورود**، **خروج زودهنگام** و **مرخصی ساعتی** با جزئیات زمانی.
- **خروجی Excel چندگانه**: تولید فایل Excel با **گزارش کامل** (جدول‌بندی و فیلترگذاری‌شده) و **زیربرگه‌ها** برای هر کارمند.
- **خروجی آماده Odoo**: تولید فایل CSV با ستون‌های استاندارد (`employee_id`، `check_in`، `check_out`، `overtime`) برای بارگذاری در سیستم‌های ERP مانند Odoo.

---

## 🛠️ پیش‌نیازها

برای اجرای برنامه، **Python** و پکیج‌های زیر مورد نیاز است:

```bash
pip install pandas jdatetime xlsxwriter openpyxl tk
```

---

## 📂 ساختار پروژه

پوشه پروژه باید شامل فایل‌های زیر باشد:

```
/attendance_processor/
├── main_processor.py       # منطق اصلی و جریان اجرای برنامه
├── settings.py             # تعریف ثابت‌ها، مپ‌ها و مدل‌های شیفت
├── shift_logic.py          # توابع کمکی، محاسبات زمانی و منطق تشخیص شیفت
└── employee_map.xlsx       # فایل نگاشت کارمندان (الزامی)
```

---

## ⚙️ تنظیم فایل `employee_map.xlsx`

این فایل باید شامل سه ستون زیر باشد:

| ستون            | توضیحات                                      |
|------------------|---------------------------------------------|
| `device_id`      | شناسه کارمند/دستگاه در فایل خام (مثل `EnNo` یا `Name`). |
| `odoo_id`        | کد کارمندی برای خروجی نهایی و فایل CSV.     |
| `shift_model`    | مدل شیفت (مثل `single_friday_off`، `triple_shift` یا `auto_detect`). |

### مدل‌های شیفت پشتیبانی‌شده

| مدل شیفت            | نوع          | توضیحات                                      |
|---------------------|--------------|---------------------------------------------|
| `single_friday_off` | ثابت         | شیفت ثابت با تعطیلی جمعه (نیمه‌شیفت پنج‌شنبه). |
| `single_saturday_off` | ثابت       | شیفت ثابت با تعطیلی شنبه (نیمه‌شیفت پنج‌شنبه). |
| `double_shift`      | چرخشی       | شیفت دوگانه (صبح و عصر) با چرخش هفتگی.      |
| `triple_shift`      | چرخشی       | شیفت سه‌گانه (صبح، عصر، شب) با چرخش هفتگی.  |
| `long_shift`        | بلند (12ساعته) | شیفت ثابت 12 ساعته.                      |
| **`auto_detect`**   | خودکار       | تشخیص خودکار بهترین شیفت (صبح/عصر/شب).      |

---

## 🚀 راهنمای اجرا

1. **آماده‌سازی**: فایل‌های Python و `employee_map.xlsx` را در یک پوشه قرار دهید.
2. **اجرا**: فایل اصلی را از ترمینال اجرا کنید:

   ```bash
   python main_processor.py
   ```

3. **دنبال کردن دستورالعمل‌ها**:
   - **نوع تاریخ ورودی**: انتخاب کنید که فایل خام از تاریخ شمسی یا میلادی استفاده می‌کند.
   - **انتخاب فایل خام**: فایل Excel حضور و غیاب را انتخاب کنید.
   - **انتخاب مسیر خروجی**: مسیر و نام فایل خروجی Excel را مشخص کنید.
   - **انتخاب `employee_map`**: اگر فایل `employee_map.xlsx` پیدا نشود، پنجره‌ای برای انتخاب دستی باز می‌شود.

4. **خروجی**: دو فایل (Excel و CSV) در مسیر مشخص‌شده تولید می‌شود.

---

## 🔧 منطق و محاسبات فنی

### ۱. روز کاری منطقی (`logical_date`)
برای شیفت‌های شبانه، یک **CUTOFF_HOUR** (پیش‌فرض **05:00 صبح**) تعریف شده است. رکوردهای قبل از این ساعت به "روز کاری" قبلی اختصاص می‌یابند.

### ۲. محاسبه مرخصی ساعتی
- **منطق**: بررسی فاصله بین `check_out` و `check_in` متوالی در یک روز.
- **آستانه**: فاصله‌های بیش از **MIN_LEAVE_GAP** (پیش‌فرض **0.5 ساعت/30 دقیقه**) به‌عنوان **مرخصی ساعتی** ثبت می‌شوند.

### ۳. محاسبات جزئیات حضور
| آیتم              | نحوه محاسبه                              |
|-------------------|------------------------------------------|
| **تأخیر**        | `MAX(0, زمان ورود - زمان شروع شیفت)`     |
| **خروج زودهنگام** | `MAX(0, زمان پایان شیفت - زمان خروج)`   |
| **اضافه‌کاری**   | `MAX(0, کل ساعات حضور - ساعات شیفت استاندارد)` |

> **نکته**: در روزهای بدون شیفت (مثل تعطیلات هفتگی)، کل ساعات حضور به‌عنوان **اضافه‌کاری** محاسبه می‌شود.

---

## 🌐 پشتیبانی از زبان
این مستندات به هر دو زبان **فارسی** و **انگلیسی** ارائه شده است تا دسترسی گسترده‌تری فراهم شود. برای جزئیات انگلیسی، به فایل مربوطه مراجعه کنید.